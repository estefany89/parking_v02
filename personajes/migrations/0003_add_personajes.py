# Generated by Django 5.1.6 on 2025-02-24 07:53

from django.db import migrations

def agregar_facciones(apps, schema_editor):
    Faccion = apps.get_model('facciones', 'Faccion')

    facciones = [
        {"nombre": "Elfos de Lothlórien", "descripcion": "Dirigidos por Galadriel y Celeborn, guardianes del bosque de Lothlórien."},
        {"nombre": "Elfos de Rivendel", "descripcion": "El refugio de los elfos en las montañas, hogar de Elrond."},
        {"nombre": "Gondor", "descripcion": "El gran reino de los Hombres, defensor del mundo libre contra Mordor."},
        {"nombre": "Rohan", "descripcion": "Los jinetes de la Marca, conocidos por sus caballos y su valentía en batalla."},
        {"nombre": "Los Enanos de Erebor", "descripcion": "Los habitantes de la Montaña Solitaria, ricos en oro y joyas."},
        {"nombre": "La Comarca", "descripcion": "El hogar pacífico de los hobbits, alejado de los conflictos del mundo."},
        {"nombre": "Mordor", "descripcion": "El dominio oscuro de Sauron, donde residen sus ejércitos de orcos y espectros."},
        {"nombre": "Isengard", "descripcion": "El territorio de Saruman, lleno de maquinaria y experimentos oscuros."},
        {"nombre": "Los Hombres del Este", "descripcion": "Aliados de Sauron, provenientes de las tierras más allá de Mordor."},
        {"nombre": "Los Corsarios de Umbar", "descripcion": "Marineros y piratas, enemigos de Gondor y aliados de la oscuridad."}
    ]

    for faccion in facciones:
        Faccion.objects.create(**faccion)

def agregar_localizaciones(apps, schema_editor):
    Localizacion = apps.get_model('localizaciones', 'Localizacion')

    localizaciones = [
        {"nombre": "Rivendel", "descripcion": "Hogar de los elfos y refugio seguro en las montañas."},
        {"nombre": "Minas Tirith", "descripcion": "Capital de Gondor, la Ciudad Blanca."},
        {"nombre": "Mordor", "descripcion": "La oscura tierra de Sauron, hogar del Monte del Destino."},
        {"nombre": "La Comarca", "descripcion": "Tierra de los hobbits, llena de colinas verdes y tranquilidad."},
        {"nombre": "Bosque Negro", "descripcion": "Un bosque vasto y peligroso, hogar de arañas gigantes y elfos silvanos."},
        {"nombre": "Edoras", "descripcion": "Capital de Rohan, donde se alza el Meduseld, el gran salón dorado."},
        {"nombre": "Gondolin", "descripcion": "La legendaria ciudad élfica oculta en las montañas."},
        {"nombre": "Isengard", "descripcion": "Fortaleza de Saruman, rodeada por un gran muro de piedra."},
        {"nombre": "Lothlórien", "descripcion": "Bosque encantado gobernado por Galadriel y Celeborn."},
        {"nombre": "Monte del Destino", "descripcion": "El volcán en Mordor donde fue forjado el Anillo Único."}
    ]

    for loc in localizaciones:
        Localizacion.objects.create(**loc)

def agregar_personajes_y_armas(apps, schema_editor):
    Personaje = apps.get_model('personajes', 'Personaje')
    Localizacion = apps.get_model('localizaciones', 'Localizacion')
    Faccion = apps.get_model('facciones', 'Faccion')
    Arma = apps.get_model('equipamiento', 'Arma')
    Armadura = apps.get_model('equipamiento', 'Armadura')
    Ataque = apps.get_model('equipamiento', 'Ataque')
    Inventario = apps.get_model('personajes', 'Inventario')
    InventarioItem = apps.get_model('personajes', 'InventarioItem')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    # Obtener instancias necesarias (o None si no existen)
    localizacion_default = Localizacion.objects.first()
    faccion_default = Faccion.objects.first()

    # Crear armas si no existen
    arma_aragorn, _ = Arma.objects.get_or_create(nombre="Espada básica", dano_base=10, tipo="espada")
    arma_legolas, _ = Arma.objects.get_or_create(nombre="Arco corto", dano_base=8, tipo="arco")

    # Crear armadura si no existe
    armadura_default, _ = Armadura.objects.get_or_create(nombre="Armadura de cuero", defensa=5)

    # Crear ataques por defecto para las armas
    ataques_espada = [
        ("Estocada", 10),
        ("Corte", 12),
        ("Remate", 15),
        ("Golpe fuerte", 18)
    ]
    ataques_arco = [
        ("Disparo rápido", 8),
        ("Flecha perforante", 12),
        ("Disparo potente", 10),
        ("Lluvia de flechas", 14)
    ]

    for nombre, dano in ataques_espada:
        Ataque.objects.get_or_create(nombre=nombre, dano=dano, arma=arma_aragorn)

    for nombre, dano in ataques_arco:
        Ataque.objects.get_or_create(nombre=nombre, dano=dano, arma=arma_legolas)

    # Crear personajes sin equipamiento
    aragorn = Personaje.objects.create(
        nombre="Aragorn",
        localizacion=localizacion_default,
        faccion=faccion_default,
        hp=100
    )

    legolas = Personaje.objects.create(
        nombre="Legolas",
        localizacion=localizacion_default,
        faccion=faccion_default,
        hp=100
    )

    # Crear inventarios para los personajes
    inventario_guerrero = Inventario.objects.create(personaje=aragorn)
    inventario_arquero = Inventario.objects.create(personaje=legolas)

    # Obtener ContentTypes para Arma y Armadura
    arma_ct = ContentType.objects.get_for_model(Arma)
    armadura_ct = ContentType.objects.get_for_model(Armadura)

    # Agregar equipo al inventario de Aragorn
    InventarioItem.objects.create(inventario=inventario_guerrero, content_type=arma_ct, object_id=arma_aragorn.id, cantidad=1)
    InventarioItem.objects.create(inventario=inventario_guerrero, content_type=armadura_ct, object_id=armadura_default.id, cantidad=1)

    # Agregar equipo al inventario de Legolas
    InventarioItem.objects.create(inventario=inventario_arquero, content_type=arma_ct, object_id=arma_legolas.id, cantidad=1)

    # Ahora que tienen las armas en el inventario, equiparlas
    aragorn.arma_equipada = arma_aragorn
    aragorn.armadura_equipada = armadura_default
    aragorn.save()

    legolas.arma_equipada = arma_legolas
    legolas.save()

class Migration(migrations.Migration):

    dependencies = [
        ('personajes', '0002_personaje_hp'),
        ('equipamiento', '0001_initial'),
        ('localizaciones', '0001_initial'),
        ('facciones', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(agregar_facciones),
        migrations.RunPython(agregar_localizaciones),
        migrations.RunPython(agregar_personajes_y_armas),
    ]
